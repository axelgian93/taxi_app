name: Release Image

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  docker-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract tag
        id: vars
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and push API image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/taxi-api:latest
            ghcr.io/${{ github.repository_owner }}/taxi-api:${{ steps.vars.outputs.tag }}

  release-artifacts:
    runs-on: ubuntu-latest
    needs: docker-publish
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: taxi
          POSTGRES_PASSWORD: taxi123
          POSTGRES_DB: taxi_app
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U taxi -d taxi_app"
          --health-interval=5s --health-timeout=5s --health-retries=20
    env:
      DATABASE_URL: postgresql://taxi:taxi123@localhost:5432/taxi_app?schema=taxi_app
      PORT: 8080
      JWT_SECRET: release-secret
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install backend deps
        working-directory: backend
        run: npm ci

      - name: Prisma generate
        working-directory: backend
        run: npx prisma generate

      - name: Prisma migrate deploy
        working-directory: backend
        run: npx prisma migrate deploy

      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Start API
        working-directory: backend
        run: |
          nohup node dist/index.js >/dev/null 2>&1 &
          for i in {1..30}; do curl -fsS http://localhost:8080/healthz && break || sleep 1; done

      - name: Export OpenAPI JSON
        working-directory: backend
        run: npm run openapi:export

      - name: Generate SDKs (Dart + TS) with Docker
        working-directory: backend
        run: |
          docker run --rm -v "$PWD/docs:/local" openapitools/openapi-generator-cli generate -i /local/openapi.json -g dart-dio -o /local/dart-sdk
          docker run --rm -v "$PWD/docs:/local" openapitools/openapi-generator-cli generate -i /local/openapi.json -g typescript-axios -o /local/ts-sdk

      - name: Archive SDKs
        working-directory: backend/docs
        run: |
          zip -r dart-sdk.zip dart-sdk
          zip -r ts-sdk.zip ts-sdk

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            backend/docs/openapi.json
            backend/docs/dart-sdk.zip
            backend/docs/ts-sdk.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
